body, html {
    margin: 0;
    padding: 0;
    height: 100%;
    scroll-behavior: smooth; /* Smooth scrolling between sections */
  }


.header {
    display: flex;
    flex-direction: row; /*Defines the main axis*/
    justify-content: center; /*Controls horizontal alignment of items along main axis*/
    align-items: flex-start; /*Controls vertical alignment of items along cross axis*/
    color: orange;
    font-size: 1.5em;
}

.header p {
    padding: 0em 0.2em;
}


/*
Home page classes
*/

.home-page {
    height: 100vh; /*element will be 100% of the viewport height*/
}

.background-image {
    position: fixed;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background-image: url('lake sky.jpg');
    background-size: cover;
    background-position: center;
    z-index: -1;
}

.nav-bar {
    display: flex;
    justify-content: center;
    flex-direction: row;
}

/*Modifies all a elements whose parent has the nav-bar class*/
.nav-bar a {
    color: orange;
    padding: 2em 2em; /*adjusts spacing within the content of each <a> element and its border*/
}

.intro-text {
    color: orange;
    font-size: 1.2em;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    margin-top: 3em;
}

.intro-text #line1 {
    position: relative; /*shifts the first <p> element relative to its position in the <div>*/
    top: 2em;
}

.homepage-links {
    display: flex;
    justify-content: center;
}

.linkedin-link {
    opacity: 0.65;
}

.github-link {
    opacity: 0.65;
    margin-top: 0.5em;
}



/*
About me page classes
*/

.about-section {
    height: 100vh; /*Makes the height of the element's content equivalent to the viewport height*/
    display: flex;
    flex-direction: column; /*We want the header to be positioned vertically above the rest of the content*/
    align-items: center; /*determines how items are positioned along the cross-axis (row, in this case)*/
}

/*Holds the image and the text*/
.about-content {
    display: flex;
    flex-direction: row; /*We want text and image elements to be positioned side-by-side one another*/
    justify-content: space-between;
    gap: 4em;
}

.about-me-text {
    position: relative;
    top: 6em;
    color: white;    
    max-width: 40%; /*sets the maximum width of the container to 45% of the viewport width*/
    white-space: normal; /*Allows text to wrap onto next line once edge of container reached*/
    word-break: break-word; /*Breaks long, continuous string of text without spaces so that it wraps to next line instead of keeping it on same line*/
    margin-left: auto;
}

.my-pic {
    opacity: 0.9;
    position: relative;
    top: 6em;
    margin-right: auto;
}

#about-me-description {
    position: relative;
    top: 1em;
}



/*
Skills page classes
*/

.skills-section {
    height: 100vh; /*Makes the height of the element's content equivalent to the viewport height*/
    display: flex;
    flex-direction: column; /*We want the header to be positioned vertically above the rest of the content*/
    align-items: center; /*determines how items are positioned along the cross-axis (row, in this case)*/
}

.skills-content {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-start;
    gap: 2em;
}

.box {
    width: 20vw;
    height: 35vh;
    background-color: rgb(34, 34, 131);
}

.box-title {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 6em;
    color: orange;
}

.inner-text {
    color: rgb(203, 3, 203);
    text-align: center;
    font-size: 80%;
}